// Method 1: Using 3rd domain, 1 full double
// Species: U0, U1, U2, L0, L1, L2, L3

directive simulation {
    final=50;
    plots=[U0(); U1(); L0(); L1(); 
        U0L0(); U0L1(); U0L2(); U0L3(); 
        U1L0(); U1L1(); U1L2(); U1L3(); 
        U2L0(); U2L1(); U2L2(); U2L3()];
}

directive simulator stochastic
directive parameters [b0=0.003; ub0=0.1]
directive compilation infinite

dom d0 = {bind=b0;unbind=ub0;colour="red"} // toehold domain for U0 and L0
dom d1 = {bind=b0;unbind=ub0;colour="orange"} // toehold domain for U1 and L1
dom d2 = {bind=b0;unbind=ub0;colour="green"} // toehold domain for U2 and L2
dom d3 = {bind=b0;unbind=ub0;colour="blue"} // toehold domain for U3 and L3

dom main = {bind=b0;unbind=ub0;colour="black"} // main domain
dom trans = {bind=b0;unbind=ub0;colour="purple"} // transition domain
dom tA = {bind=b0;unbind=ub0;colour="lime"} // toehold A domain
dom tB = {bind=b0;unbind=ub0;colour="cyan"} // toehold B domain

def U0() = <main^ trans^ tA^ d0^>
def U1() = <main^ trans^ tA^ d1^>
def U2() = <main^ trans^ tB^ d2^>

def L0() = {main^* trans^* tA^* d0^*}
def L1() = {main^* trans^* tB^* d1^*}
def L2() = {main^* trans^* tA^* d2^*}
def L3() = {main^* trans^* tB^* d3^*}

def U0L0() = [main^ trans^ tA^ d0^]
def U0L1() = [main^ trans^]<tA^ d0^>{tB^* d1^*}
def U0L2() = [main^ trans^ tA^]<d0^>{d2^*}
def U0L3() = [main^ trans^]<tA^ d0^>{tB^* d3^*}

def U1L0() = [main^ trans^ tA^]<d1^>{d0^*}
def U1L1() = [main^ trans^]<tA^ d1^>{tB^* d1^*}
def U1L2() = [main^ trans^ tA^]<d1^>{d2^*}
def U1L3() = [main^ trans^]<tA^ d1^>{tB^* d3^*}

def U2L0() = [main^ trans^]<tB^ d2^>{tA^* d0^*}
def U2L1() = [main^ trans^ tB^]<d2^>{d1^*}
def U2L2() = [main^ trans^]<tB^ d2^>{tA^* d2^*}
def U2L3() = [main^ trans^ tB^]<d2^>{d3^*}

( 100 U0()
| 100 U1()
| 100 U2()
| 100 L0()
| 100 L1()
| 100 L2()
| 100 L3()
| 100 U0L0()
| 100 U0L1()
| 100 U0L2()
| 100 U0L3()
| 100 U1L0()
| 100 U1L1()
| 100 U1L2()
| 100 U1L3()
| 100 U2L0()
| 100 U2L1()
| 100 U2L2()
| 100 U2L3()
)